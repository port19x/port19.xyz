<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Port19&#x27;s Webpage</title>
        <link>https://port19.xyz</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://port19.xyz/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Tue, 14 Feb 2023 00:00:00 +0000</lastBuildDate>
        <item>
            <title>💻 Farewell Qutebrowser</title>
            <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/bye-qutebrowser/</link>
            <guid>https://port19.xyz/bye-qutebrowser/</guid>
            <description>&lt;h1 id=&quot;notes-after-migrating-from-qutebrowser-to-librewolf&quot;&gt;Notes after migrating from Qutebrowser to Librewolf&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;&#x2F;h2&gt;
&lt;p&gt;So for the past 2 years I&#x27;ve been using Qutebrowser to browse the web, sponsoring the project for the past year.
It&#x27;s the best keyboard-driven browser currently in existence and is very actively maintained.
I originally switched to Qutebrowser back when I first learned about tiling window managers and wanted to use my keyboard for more and more things.
What now urged me to reconsider this browser choice was the continued lack of per-site cookie persistence in Qutebrowser.
This resulted in me having to log into every account (except discord for some reason) on each new browser session.
And since some issues with hand pain have resurfaced recently, repetitive unnecessary keystrokes are the last thing I need right now.
Librewolf has been my secondary browser for a while, being well known for it&#x27;s state of the art security and privacy.
Librewolf is basically a heavily patched Firefox and is what you&#x27;d get after configuring Firefox for privacy for a week.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mouse-keyboard&quot;&gt;Mouse &amp;gt; Keyboard&lt;&#x2F;h2&gt;
&lt;p&gt;In text editors it makes sense to have a keyboard-driven interface.
This is due to the nature of text editing: you primarily insert text, occasionally correcting mistakes, copying and pasting parts and moving around your body of text.
Web Browser are different: Your involvement is a lot more passive. You primarily navigate the web and only occasionally answer short text-prompts and rarely write longer content.
Using a two-handed input device provides no benefit for this activity.
It&#x27;s a lot simpler, a lot more precise to use some pointing device like a mouse, or a track point.
With minimal practice you can even switch hands.
I sometimes browse the web with my left hand when I&#x27;m experiencing hand pain from long typing sessions.
But the ergonomics go further than just halving the amount of required hands:
Mice buttons have a shorter travel distance and a lighter actuation weight than most keyboards.
Mice are shaped to fit and support your palm, or at least not require the hovered hands that constitute correct typing form.
They are lighter and allow for a wider, more natural range of motion.
I may go into more depth on the ergonomics of mice in a separate article, but you get the broad picture.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;accessibility&quot;&gt;Accessibility&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;uBlock Origin:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
Librewolf supports addons and therefore provides true, state of the art adblocking via uBlock Origin.
This is vastly superior to brave style adblocking provided to Qutebrowser by python-adblock.
Additionally, uBlock Origin provides optional filters to hide cookie banners and let&#x27;s you control what javascript gets executed.
Many people dismiss Qutebrowser on this merit alone, but since I mostly browse high-quality websites it was tolerable.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Dark Reader:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
Most of the web is stuck in light mode, which contributes greatly to eye strain.
The Dark Reader extension helps with that in ways Qutebrowser simply can&#x27;t.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Reader View:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
Reader View shows only the content you care about and provides a better interface to read most articles posted on the web by content factories that inevitably float to the top of search results.
This greatly reduces visual noise and allows me to waste less focus while consuming web content.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;quality-of-life&quot;&gt;Quality of Life&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Tabliss:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
A new-tab extension that is pretty easy to set up.
To be fair, you could set up something equivalent in Qutebrowser by using a proper webpage for such a task.
Bento is one project that comes to mind and has been on my bucket list for a while.
Well, tabliss is a lot more accessible and involves 0 code, so I&#x27;ll take that over Bento any day.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Auto-hiding Tab Bar on full screen:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
On Qutebrowser I had a key binding to hide both the status bar as well as the url bar for when I was reading something or just didn&#x27;t need it for a while.
On Librewolf, when I fullscreen the window, the tab bar automatically hides itself and reveals itself again when I hover near the top of the screen.
This is peak ux.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Content aware screenshots:&lt;&#x2F;strong&gt; &lt;br &#x2F;&gt;
When you screenshot something in Librewolf, it automatically shows you selectable regions while hovering across the page.
Since you often want to capture exactly one paragraph or one div or some other form of content container, this is immensely helpful and marginally improves the quality of your screenshots.
Qutebrowser doesn&#x27;t even do screenshots on it&#x27;s own!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;privacy-and-security&quot;&gt;Privacy and Security&lt;&#x2F;h2&gt;
&lt;p&gt;While many care little about privacy, I&#x27;ve been going above and beyond to harden my security and minimize my digital footprint.
Having suboptimal browser privacy was in stark contradiction to this, as the web browser covers the majority of your datas surface area, especially on desktop computers.
I can now rest assured that I have state of the art protection that is more in line with the drastic precautions I take in other areas of my digital life, such as using a feature phone and closing old accounts among other robust opsec habits.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;farewell&quot;&gt;Farewell&lt;&#x2F;h2&gt;
&lt;p&gt;So to round things off: Is Qutebrowser a good browser? Yes, for sure.
It is by far the best keyboard-driven web browser released today and has one of the most competent and active maintainers I&#x27;ve seen in any open source project.
It is great for the specific target audience it caters to.
It&#x27;s just that now I no longer fit into that target audience and am glad to have adopted a different product that caters to my needs.
I hope you found this piece insightful and gained some appreciation for the tools at your disposal.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Performance is a Software Problem</title>
            <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/performance-software/</link>
            <guid>https://port19.xyz/performance-software/</guid>
            <description>&lt;h1 id=&quot;how-my-pinebook-pro-is-faster-than-your-m1-mac&quot;&gt;How my pinebook pro is faster than your m1 mac&lt;&#x2F;h1&gt;
&lt;p&gt;Let me open this post with an anecdote:
About half a year ago, after a lot of hype surrounding the product, I got curious and bought an entry level m1 macbook air.
I unwrapped the immaculate packaging, connected it to the power and booted it up.
After some initial setup, I installed homebrew and got my suite of applications installed.
Since I like tiling window managers, I installed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ianyh&#x2F;Amethyst&quot;&gt;amethyst&lt;&#x2F;a&gt;, tho &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koekeishiya&#x2F;yabai&quot;&gt;yabai&lt;&#x2F;a&gt; is another great option.
I played around for a few hours, trying to replicate my linux environment, to get the mac feeling snappy.
Eventually I gave up, repackaged the mac again, and refunded it the next day, returning to my linux setup on the pinebook pro.&lt;&#x2F;p&gt;
&lt;p&gt;Another anecdote:
About one year ago, as you might know from &lt;a href=&quot;https:&#x2F;&#x2F;port19.xyz&#x2F;emacs&#x2F;&quot;&gt;my&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;port19.xyz&#x2F;emacs1y&#x2F;&quot;&gt;other&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;port19.xyz&#x2F;neovim-customization&#x2F;&quot;&gt;writings&lt;&#x2F;a&gt;, I switched to emacs.
I put as much of my desktop usage as possible into it and eventually figured that, since I used emacs for everything, I could switch back to some entry level linux distro, like linux mint.
This was on a beefy tower PC: Ryzen 7 3700x CPU, Vega 64 GPU, nvme SSD and 16 gigabytes of RAM.
Despite the PCs power, the environment felt heavy and even sluggish at times.
After a few weeks, I switched back to arch linux.&lt;&#x2F;p&gt;
&lt;p&gt;Now there are a few obvious limitations to my thesis that I want to acknowledge.
No, I can&#x27;t play 3D games like Rise of the Tombraider on my current laptop, the tuxedo aura 15, much less at 4k.
No, the pinebook pro will not play minecraft as the tuxedo aura will.
Transcoding stuff and compiling software does scale with raw processing power.
And I&#x27;m sure even some heavy websites might be slower to load on the pinebook pro.&lt;&#x2F;p&gt;
&lt;p&gt;This however says little about general responsiveness.
Just like you should choose an SSD based on random reads instead of sequential bandwidth,
you should measure your computers speed, it&#x27;s snappiness if you will, in latency and not in throughput.
It does not matter to me whether ffmpeg takes 5 or 50 seconds to transcode an hour long m4a to mp3,
I do not care if recompiling my emacs packages takes 2 minutes or 20.
Either way I&#x27;m afk making a tea, or maybe I&#x27;m just switching to my web browser and continuing my work there for a few minutes.
As long as you&#x27;re not a gamer, or you can appreciate retro games, performance is no reason to buy a new or even recent computer.&lt;&#x2F;p&gt;
&lt;p&gt;So what can you do in software to speed things up?
Disable animations, or at least make them very fast.
If I&#x27;m switching windows I don&#x27;t wanna wait 200 milliseconds for some animation.
Decrease your number of background processes as much as possible.
Cups and bluez do not need to be running all the time.
Start more systemd services on-demand to decrease resource consumption and possibly avoid a couple of rare bugs along the way.
Build your own &lt;a href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Desktop_environment#Custom_environments&quot;&gt;desktop environment&lt;&#x2F;a&gt; by handpicking the applications you run and installing only what you need on top of a minimal base.
This alone should be enough to turn even 15 year old business laptops, like a thinkpad x200, into capable workhorses again.
Two bonus tips: Use wayland if you can, it&#x27;s always xorg that&#x27;s &amp;quot;slow&amp;quot;, never the window manager.
And keep your computer on for longer, or use hibernate, so that the linux caching systems can do their job.&lt;&#x2F;p&gt;
&lt;p&gt;With all that being said, I hope you&#x27;ll now think twice before buying new, expensive hardware.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>📚 Cold Shower Review</title>
            <pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/cold-shower-review/</link>
            <guid>https://port19.xyz/cold-shower-review/</guid>
            <description>&lt;p&gt;&lt;em&gt;tldr: very worth it&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So after many months of this rotting on my bucket list and the many contrast showers I had taken in the past, yesterday I finally took a proper cold shower.
To get the terminology out of the way: A contrast shower is when you start the shower hot and end it cold, possibly flicking back and forth between the two a few times.
A cold shower means turning the handle all the way to it&#x27;s coldest setting before jumping in.&lt;&#x2F;p&gt;
&lt;p&gt;My cold shower went like this: I hyped myself up for a few minutes, unsure of what would await me.
Then I got into the shower, and took several deep breaths before turning on the cold water.
It was a big shock, haven&#x27;t felt this much adrenaline in months, I breathed fast and heavily.
After what must have been 20 seconds, after my whole body was wet, the initial shock cooled down &lt;em&gt;(pun intended)&lt;&#x2F;em&gt;, my breath stabilized and I could think clearly again.
I stayed in the shower for another 3 minutes, taking in this meditative experience and giving into the cold.&lt;&#x2F;p&gt;
&lt;p&gt;After having turned the shower off, while drying myself, I couldn&#x27;t help but laugh.
I can&#x27;t overstate the intensity of this experience, I haven&#x27;t felt so alive in months.
I did not worry about the future or think about the past, I was just present and happy.
And that was just the mental side, my body felt like it was wrapped in an aura of purity and cold, like I was wearing some magical armor, like all my cells had died and been reborn. I felt invincible.
In the minutes that followed, the intensity of my experience decreased, and gave way to a deep feeling of peace.
When I went to bed a few minutes later, I fell asleep right away.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;You can do it too&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re afraid, great, that&#x27;s the point, everyone is. &lt;br &#x2F;&gt;
Read up on this &lt;a href=&quot;https:&#x2F;&#x2F;libreddit.de&#x2F;r&#x2F;coldshowers&#x2F;comments&#x2F;eyoiol&#x2F;faq_read_this_thread_if_you_are_new_to_cold&#x2F;&quot;&gt;FAQ&lt;&#x2F;a&gt; and then just do it.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Reviewing all Terminal Emulators</title>
            <pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/terminals/</link>
            <guid>https://port19.xyz/terminals/</guid>
            <description>&lt;h1 id=&quot;not-all-terminals-are-created-equally&quot;&gt;Not all Terminals are created equally&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;consider-the-native-one-first&quot;&gt;Consider the native one first&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re using a full desktop environment like gnome or kde, using the builtin terminal might be a good starting point.
That way you get consistent themeing out of the box and benefit from a consistent user experience.
These terminals are pretty basic, but they get the job done.
If you use the terminal often or even &amp;quot;live in the terminal&amp;quot;, consider a more sophisticated product.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;special-purpose-terminals&quot;&gt;Special purpose terminals&lt;&#x2F;h2&gt;
&lt;p&gt;If you, for whatever reason, like suckless software and believe that patching source code is an acceptable way of configuring software, use st. 
The suckless terminal st, will take the least disk space and lacks basic functionality out of the box, making it very attractive to the average suckless enthusiast.&lt;&#x2F;p&gt;
&lt;p&gt;If you use wayland and want &amp;quot;speed&amp;quot; above all else, you can&#x27;t beat foot. The foo terminal.
Foot has the lowest latency of any terminal I&#x27;ve tested.&lt;&#x2F;p&gt;
&lt;p&gt;If neither of those two are appealing to you, but you own an nvidia or arm gpu, consider some old terminal.
Test the gpu accelerated options and compare speeds with those old terminals.
Depending on how bad the drivers are, urxvt might be a better choice than the following options.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;intermezzo-how-to-benchmark-terminals&quot;&gt;Intermezzo: How to benchmark terminals&lt;&#x2F;h2&gt;
&lt;p&gt;This is often subject to controversial debates. Below I&#x27;ll give you some benchmarks I use. &lt;br &#x2F;&gt;
How fast the terminal feels is more important than these metrics anyway. &lt;br &#x2F;&gt;
Also consider &lt;code&gt;hyperfine&lt;&#x2F;code&gt; for multi-run benchmarks. &lt;&#x2F;p&gt;
&lt;p&gt;Graphical throughput: &lt;code&gt;time ( tree &#x2F; )&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Redirection: &lt;code&gt;time ( find &#x2F; -type f -iname &amp;quot;*.md&amp;quot; 2&amp;gt; &#x2F;dev&#x2F;null; )&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Latency: &lt;code&gt;time ( ls )&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Images: &lt;code&gt;time ( wezterm imgcat sample.jpg)&lt;&#x2F;code&gt; or equivalent&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gpu-accelerated-terminals&quot;&gt;GPU accelerated terminals&lt;&#x2F;h2&gt;
&lt;p&gt;GPU accelerated terminals have been hyped up for a while now. 
Alacritty has been hyped because of the rust hype but with it&#x27;s two competitors I can&#x27;t in good conscience recommend it.
The speed debate between alacritty and kitty is childish at best.
Pay as little attention to it as you can.&lt;&#x2F;p&gt;
&lt;p&gt;Kitty is a neat terminal with an image viewer and some other small utilities like a diff viewer.
Kitty is pretty fast and has the highest graphical bandwidth&#x2F;throughput I&#x27;ve tested.
The kitty dev however is pretty delusional and rude, so don&#x27;t choose this one if you&#x27;re the kind of person that tries to contribute upstream.&lt;&#x2F;p&gt;
&lt;p&gt;My favorite terminal then is wezterm.
Wezterm is incredibly feature rich, supporting 3 image protocols, asciinema recording and shipping with hundreds of themes.
It&#x27;s configured in lua, giving it some hypothetical programmability.
Wezterm imgcat is about 10x faster than kitty icat, so if you regularly use the terminal as an image viewer, I recommend you use wezterm.
Wezterm, once you disable the tab bar, isn&#x27;t noticeably slower than kitty or alacritty in my testing.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;simplified-decision-tree&quot;&gt;Simplified decision tree&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Do you use a desktop environment? → Use the native terminal&lt;&#x2F;li&gt;
&lt;li&gt;Do you enjoy suckless software? → Use st&lt;&#x2F;li&gt;
&lt;li&gt;Do you use wayland? → Use foot&lt;&#x2F;li&gt;
&lt;li&gt;Do you have bad gpu drivers? → Use urxvt&lt;&#x2F;li&gt;
&lt;li&gt;Do you like a featureful experience? → Use wezterm&lt;&#x2F;li&gt;
&lt;li&gt;Do you want gpu acceleration but can&#x27;t afford 100MB of disk space? → Flip a coin&lt;&#x2F;li&gt;
&lt;li&gt;Heads → Use kitty&lt;&#x2F;li&gt;
&lt;li&gt;Tails → Use alacritty&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</description>
        </item>
        <item>
            <title>💻 Neovim customization is inexcusably bad</title>
            <pubDate>Fri, 27 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/neovim-customization/</link>
            <guid>https://port19.xyz/neovim-customization/</guid>
            <description>&lt;h1 id=&quot;and-i-though-emacs-was-complicated&quot;&gt;And I though Emacs was complicated&lt;&#x2F;h1&gt;
&lt;p&gt;In my previous post I looked back on one year of Emacs and it&#x27;s occasional sluggishness, announcing I would try to move to Neovim once more.
Today I want to give an update on how said attempted migration is coming along: it&#x27;s pretty bad.
I would have preferred customizing my Neovim in lua, but gave up after about two hours of every single plugin being documented for setup in an init.vim file instead.
Don&#x27;t even get me started with the possibility of using fennel (a lisp that compiles to lua) to configure it.
That would turn following documentation into a two step translation process.&lt;&#x2F;p&gt;
&lt;p&gt;After a bit of frustration, I threw my legacy Neovim config to the side and just started a new one from scratch.
After discovering and following an old blog post by the Conjure developer I was able to get a good Clojure environment going quite quickly.
So here I am after two days of hacking away at my config. With an awesome Clojure environment but nothing else.
There is no illusion left in me that Neovim is extensible in the way Emacs is.
There just is no substitute for &lt;code&gt;describe-variable&lt;&#x2F;code&gt; and &lt;code&gt;describe-function&lt;&#x2F;code&gt;, which I underappreciated before but drastically help with configuring.
Lisplessness is more of an ideological issue I guess, but I do feel the trade-off of not configuring Neovim in my programming language of choice.&lt;&#x2F;p&gt;
&lt;p&gt;Let me approach configuration and extensibility from another angle: What is Neovim?
At it&#x27;s core, Neovim is a set of keybindings. Any plugin system or configuration is a clear afterthought.
You wouldn&#x27;t use Nano as a text editor if it came with plugins either.
Emacs on the other hand is designed from the ground up to be extensible.
This shows not only in the self-documenting nature of &lt;code&gt;describe-*&lt;&#x2F;code&gt;, it shows in the way it treats windows and frames.
It shows in the way it handles buffers, minor- and major modes.&lt;&#x2F;p&gt;
&lt;p&gt;To give a concrete example of where true extensibility is useful: In Emacs I use a org-mode hook to start a 25 minute timer whenever I clock-in on some outline.
This is not just unrealistic in Neovim, this statement is likely incomprehensible to anyone who has not looked into Emacs or org-mode.
The fact that I can just set up a hook for something and execute arbitrary code from there is powerful and it&#x27;s only scratching the surface.
Emacs might have a steeper learning curve than Neovim, but in return you get a far higher skill ceiling.&lt;&#x2F;p&gt;
&lt;p&gt;A few days ago I mentioned in an online exchange that if Neovim is a text editor then Emacs must be an office suite.
This analogy feels more and more suitable as I try to make Neovim do even basic things.
Calling Emacs an operating system is going a bit far, as it lowkey sucks at handling media or browsing the web, but it sure does a whole lot of the things Microsoft sells as components in an office suite.
Emacs is a coherent environment empowering you to use it&#x27;s vast toolset. Meanwhile Neovim is nothing but one tool.&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps my whole frustration with the occasional sluggishness of Emacs was foolish.
There may very well be aspects in it&#x27;s architecture that slow it down, but more significantly it just does a whole lot more than Neovim.
Let me reiterate my prior point: Neovim is primarily a set of keybindings. To make something so simple be slow would be an embarrassment.
I want and need a whole lot more than just some keybindings to do what I do effectively.&lt;&#x2F;p&gt;
&lt;p&gt;Suffice to say I&#x27;m going back to Emacs.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Emacs: One year later</title>
            <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/emacs1y/</link>
            <guid>https://port19.xyz/emacs1y/</guid>
            <description>&lt;h1 id=&quot;a-love-hate-relationship&quot;&gt;A love-hate Relationship&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;brief-history&quot;&gt;Brief history&lt;&#x2F;h2&gt;
&lt;p&gt;On the 7th of January 2022 I decided to install Doom Emacs. 
I toyed with the basics that night and continued to do so the next day.
After two months, I wrote a first blog post on it. That being the oldest post hosted on this site today &lt;a href=&quot;https:&#x2F;&#x2F;port19.xyz&#x2F;emacs&#x2F;&quot;&gt;(check it out)&lt;&#x2F;a&gt;.
I stayed on Emacs for a while, switched back to Neovim for a few months and then came back again.
I even wrote my first scientific paper in some org-latex hybrid.
Orgmode, not Emacs, has given me great power which comes with great responsibility that I&#x27;m getting tired off.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reasons-to-love-emacs&quot;&gt;Reasons to love Emacs&lt;&#x2F;h2&gt;
&lt;p&gt;When people talk about Emacs, they often mention some &amp;quot;killer features&amp;quot;. Here are mine:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;magit&quot;&gt;Magit&lt;&#x2F;h3&gt;
&lt;p&gt;Magit is a git client that empowers you greatly.
It&#x27;s different from any other git client I have seen or used previously.
Magit doesn&#x27;t dumb things down for you, but rather empowers you and shows you options you might not have known to exist.
Magit makes large rebases about twice as fast and half as daunting. It&#x27;s the best way to interact with git and will make you better at git, even if you revert to using the command line.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;orgmode&quot;&gt;Orgmode&lt;&#x2F;h3&gt;
&lt;p&gt;Orgmode is a major mode and document format that has about as many features as my entire linux setup combined.
Markdown, tables, executable code blocks are all neat.
Rich export options make my life a lot easier.
Basic outlining and outline folding is great and makes plain text documents scalable to dozens of kilobytes.
Todo, scheduling and agenda are kinda meh compared to something like a bullet journal or smartphone productivity setup, but are nice to have, especially for project management.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lisp&quot;&gt;Lisp&lt;&#x2F;h3&gt;
&lt;p&gt;Lisp support also makes the list. The overwhelming majority of lisp programmers use Emacs.
This is not very surprising, seeing as Emacs is primarily an elisp interpreter that has a long history within the lisp family of languages.
Clojure has been my primary programming language for some time now. Using Doom Emacs made the transition a lot easier than it could have been otherwise.&lt;&#x2F;p&gt;
&lt;p&gt;Other notable things: rapid theme switching, elfeed (rss), erc (irc)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reasons-to-hate-emacs&quot;&gt;Reasons to hate Emacs&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;it-s-slow-it-just-is&quot;&gt;It&#x27;s slow. It just is.&lt;&#x2F;h3&gt;
&lt;p&gt;Compared to Neovim, and especially it&#x27;s gpu accelerated frontends like Neovide, Emacs feels sluggish.
Doom Emacs ameliorates this, but it&#x27;s really emacs-nativecomp with ahead of time compilation that makes Emacs tolerable.
But you still feel the slowness on many occasions.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;it-s-large-very-large&quot;&gt;It&#x27;s large, very large.&lt;&#x2F;h3&gt;
&lt;p&gt;My &lt;code&gt;~&#x2F;.config&#x2F;emacs&lt;&#x2F;code&gt;, where Doom is installed, is 490 megabytes large.
For reference, this is 90% of my &lt;code&gt;~&#x2F;.config&lt;&#x2F;code&gt; with another 9% being used by signal-desktop, an electron app.
Coupled with native compilation of that whole setup taking a few minutes, this significantly increases my recovery time from backups.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;it-s-a-shaky-foundation-that-is-going-downhill&quot;&gt;It&#x27;s a shaky foundation that is going downhill.&lt;&#x2F;h3&gt;
&lt;p&gt;Since emacs is very old, it has enjoyed a massive first movers advantage. 
I&#x27;m sure that when it was first released in 1976, it was superior to anything else at the time.
For reference, the same year vi was released.
Since then emacs has certainly improved. Slowly and steadily.
&amp;quot;Killer features&amp;quot; chose emacs as their platform of choice.
But...&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-competition-has-catched-up&quot;&gt;The competition has catched up&lt;&#x2F;h2&gt;
&lt;p&gt;It&#x27;s not 1976 anymore. I&#x27;m writing this article in 2023.
Vi got superseded by Vim in 1991.
Vim got then superseded by Neovim in 2015.
A vast package selection exists today for Neovim. Even a few attempting the herculean task that is porting Orgmode&lt;&#x2F;p&gt;
&lt;p&gt;Emacs users have largely given up on the foundations of the editor, staying either because of sunk cost, ideological alignment with lisp or because they are bound by one of the few killer features. People use evilmode because they know that vim keybindings are vastly superior. They use distributions like Doom to make Emacs be Neovim when it was never meant to be.
I&#x27;m on emacs today because of Orgmode and this has never been different.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;where-do-we-go-from-here&quot;&gt;Where do we go from here&lt;&#x2F;h2&gt;
&lt;p&gt;As part of my vacation I have planned to try a move back to Neovim, tho keeping around my emacs install just in case and to write my next paper in.&lt;&#x2F;p&gt;
&lt;p&gt;Conjure on Neovim has great Clojure support and it&#x27;s UX suits me even better than cider on emacs. I tried it today to great success.&lt;&#x2F;p&gt;
&lt;p&gt;Nvim-orgmode on the other hand isn&#x27;t very promising, as it&#x27;s reducing Orgmode to some markdown plus Todo and scheduling.
So for Orgmode I&#x27;ll just have to slowly wean myself off of it.&lt;&#x2F;p&gt;
&lt;p&gt;Magit is neat, but very optional for me. I don&#x27;t rebase every day, I can deal with a time penalty for doing things with aliases on the command line.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;I may get that lean and fast environment once more. &lt;br &#x2F;&gt;
I only have to sacrifice this little bit of power. &lt;br &#x2F;&gt;
I shall make it, but it will take a while.&lt;&#x2F;em&gt; &lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Hardlinks are underrated</title>
            <pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/hardlinks/</link>
            <guid>https://port19.xyz/hardlinks/</guid>
            <description>&lt;h1 id=&quot;hardlinks-symlinks-stow-for-dotfiles&quot;&gt;Hardlinks &amp;gt; Symlinks + Stow (for dotfiles)&lt;&#x2F;h1&gt;
&lt;p&gt;Let&#x27;s just get a quick overview over our options to duplicate files from A to B&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;&#x2F;th&gt;&lt;th&gt;Copy&lt;&#x2F;th&gt;&lt;th&gt;Hardlink&lt;&#x2F;th&gt;&lt;th&gt;Symlink&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Command&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;cp a b&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;ln a b&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;ln -s a b&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Storage requirement&lt;&#x2F;td&gt;&lt;td&gt;2a&lt;&#x2F;td&gt;&lt;td&gt;a&lt;&#x2F;td&gt;&lt;td&gt;a&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;b &amp;quot;survives&amp;quot; rm a&lt;&#x2F;td&gt;&lt;td&gt;y&lt;&#x2F;td&gt;&lt;td&gt;y&lt;&#x2F;td&gt;&lt;td&gt;n&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Copying is pretty straight forward, no surprises here. &lt;br &#x2F;&gt;
Symlinks are the go-to solution if you want to reference a file from somewhere else. &lt;br &#x2F;&gt;
It&#x27;s what makes my config files appear to be in &lt;code&gt;~&#x2F;.config&lt;&#x2F;code&gt; when they&#x27;re actually in &lt;code&gt;~&#x2F;dotfiles&lt;&#x2F;code&gt;. &lt;br &#x2F;&gt;
This happens via the usage of &lt;code&gt;stow&lt;&#x2F;code&gt;, an age old program for these sorts of things.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll probably replace my &lt;code&gt;stow&lt;&#x2F;code&gt; usage with self scripted hardlinks.&lt;br &#x2F;&gt;
The reason for this is twofold.&lt;br &#x2F;&gt;
I don&#x27;t want to clean up broken symlinks when I switch programs &#x2F; decide a config file doesn&#x27;t deserve a spot in the git repo.&lt;br &#x2F;&gt;
Second, I may actually want to have residual configuration. Let me elaborate.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s say I configure neofetch and put that into my git repo only to, after a few commits, realise that such a minor program with it&#x27;s unimportant config file doesn&#x27;t deserve a spot in my dotfiles repo.&lt;br &#x2F;&gt;
In that case I&#x27;d get rid of it in my dotfiles folder, leaving the broken symlink.&lt;br &#x2F;&gt;
Equally bad, the config is now lost. Or at least obscured in the git history.&lt;br &#x2F;&gt;
I&#x27;d much prefer to have it still lying around, taking up the kilobyte that it is taking up in my git history anyway.&lt;&#x2F;p&gt;
&lt;p&gt;Kinda sad that stow doesn&#x27;t come with a hardlink option :&#x2F;&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>📚 Frustrations with college</title>
            <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/frustrations-with-college/</link>
            <guid>https://port19.xyz/frustrations-with-college/</guid>
            <description>&lt;h1 id=&quot;don-t-study-cs-for-administration&quot;&gt;Don&#x27;t study CS for administration&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;i-m-not-a-software-developer&quot;&gt;I&#x27;m not a Software Developer&lt;&#x2F;h2&gt;
&lt;p&gt;So I, as some of my readers may know, am a dual student studying computer science in my 3rd semester.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m also a sysadmin. Someone who plays with infrastructure. 
I&#x27;m not a software developer, despite coding as a hobby and finding that quite enjoyable.
I don&#x27;t even want to become a software developer either. 
If by some magical circumstance I get offered a dream job writing clojure at cognitect or by an even more substantial miracle I get to live off donations received for my work on open source I wouldn&#x27;t reject the idea of coding as my primary job.
But I find general corporate software development and associated practices repulsive and wouldn&#x27;t want to consciously risk putting myself in such an environment.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;computer-science-software-development&quot;&gt;Computer Science == Software Development&lt;&#x2F;h2&gt;
&lt;p&gt;Surely there are ways in which computer science is more akin to mathematics than to the practical art of software development.
Yet computer science in the way it is taught at the colleges we dual students go to in the bachelors program could hardly be more aligned to suit future software developers.
There are plenty of courses that are either clearly for improving ones fit for software development or don&#x27;t require much mental gymnastics to determine to be of potential use for said field.
Little to nothing I learn in college enriches me beyond some form of intellectual stimulation.
Little to nothing can or will be applied in my day-job as a sysadmin.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;theory-practice&quot;&gt;Theory != Practice&lt;&#x2F;h2&gt;
&lt;p&gt;If the previous paragraph lead you to believe I was promoting a CS degree for software devs, think again.
Even software devs don&#x27;t gain that much from a degree &#x2F; college program.
Sure, you can construct use-cases for them much more easily, but at that point you just get a collection of courses applicable to narrow and rare sub-fields of software development or computer science.
Or, perhaps more frequently, you get taught basics in a very long winded and monotonous way.
Everyone that studies CS does it for the degree.
Not unlike me, the rest of my class studies to pass the tests.
You extract useful bits and pieces here and there but ultimately it&#x27;s a waste of your time.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;academic-writing&quot;&gt;Academic Writing&lt;&#x2F;h2&gt;
&lt;p&gt;I already wrote one paper. It was terrible, but the bar was very low as well for that one so no major issues.
I have to write at least 3 more papers, gradually larger in scope.
Scientific writing is about proving or disproving a thesis. It may also be about measuring something.
But, even more so than programming, administration is a craft not a science.
Good admins have broad knowledge about some set of tools and&#x2F;or components and use said knowledge to develop, improve and most prominently maintain infrastructure.
While some programmer might at some point benefit from, to name an example, the concept of software complexity, we admins can learn pretty much all that&#x27;s needed with a whiteboard and some first party documentation.
I need to shoehorn a craft into a science and that mismatch has consequences.
It&#x27;s frustrating.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-continue-anyway&quot;&gt;Why Continue Anyway?&lt;&#x2F;h2&gt;
&lt;p&gt;Listen, I&#x27;m more or less half way through and will get some worthless piece of paper at the end that tells stupid recruiters that I&#x27;m capable of learning basic math.
If I could travel back in time I would surely pick a regular apprenticeship over my studies, but changing gears now would reflect even more negatively on myself than if I had simply chosen said apprenticeship from the start.&lt;&#x2F;p&gt;
&lt;p&gt;The other way to look at things is as a hobbyist.
I&#x27;m not a software developer by trade. But I&#x27;m a programmer and hacker recreationally.
I can extract some knowledge from what I&#x27;m being taught and apply it to my daily coding.
This knowledge is rather scarce and merely a byproduct of a ton of useless bullshit, but might as well take it.&lt;&#x2F;p&gt;
&lt;p&gt;The latter is my preferred justification.
I may not end up working in IT anyway. I have no crystal ball to look into the future with.
I&#x27;m open enough to try alternative lines of work.
My large ego won&#x27;t prevent me from pursuing jobs that get less recognition by the general public either.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-word-of-caution&quot;&gt;A Word Of Caution&lt;&#x2F;h2&gt;
&lt;p&gt;I see many young folks flocking towards IT as a goldmine of an employment opportunity.
In Germany we recommend avoiding a career as a cook to people who like cooking, so as to not ruin the fun of their hobby.
Why? &lt;&#x2F;p&gt;
&lt;p&gt;How is IT any different? Sure you get a ridiculous amount of money shoved up there but at it&#x27;s core you&#x27;re likely working for a stupid and&#x2F;or evil company doing meaningless labour and doing it very poorly at that because everything is legacy.
And who says this gold rush will never end? What guarantees that you&#x27;ll be paid well by the time you get to call yourself senior?&lt;&#x2F;p&gt;
&lt;p&gt;Try out the IT field, but don&#x27;t go in with the assumption that enjoying IT as a hobby will guarantee or even correlate with you enjoying IT as a job.
Have realistic expectations and stay as far away from institutionalised science as you can.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 On Programming Skill</title>
            <pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/on-programming-skill/</link>
            <guid>https://port19.xyz/on-programming-skill/</guid>
            <description>&lt;h1 id=&quot;tactics-strategy-and-project-management&quot;&gt;Tactics, Strategy and Project Management&amp;quot;&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;it-s-language-agnostic&quot;&gt;It&#x27;s language agnostic&lt;&#x2F;h2&gt;
&lt;p&gt;One mistake common in new and&#x2F;or bad programmers is to measure programming skill in language proficiency.
This might make sense for a first programming language, but any half decent programmer should quickly ascend beyond this level.
Programming skill is at most bound to paradigms, not languages. 
If you&#x27;re a god at C you won&#x27;t suck at python, but you might suck at haskell.
But even the association of skill with a paradigm doesn&#x27;t sit quite right.
There is a way to assess programming skill independent the proficiency with tools.
You aren&#x27;t &amp;quot;a good python programmer&amp;quot;.
You may be a good programmer and you may be good at python.
But by describing yourself as a good python programmer you&#x27;re selling yourself short by binding your skill to that language, by implying your useless outside that domain.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tactics&quot;&gt;Tactics&lt;&#x2F;h2&gt;
&lt;p&gt;Tactics shows itself in the ability to solve coding puzzles. To sum the first 10000 prime numbers.
Tactics requires knowing data structures. It requires analytical thinking and a lot of practice.
A good tactician will be able to write and navigate highly complicated code and is able to leverage complicated tools to solve complicated problems.
To get better at tactics, pay attention in your data structures and algorithms class at college.
Alternatively, or afterwards, go to codewars and grind some Katas.
Maybe try some project euler problems if you want a more intense mathematical flair.
Advent of Code is the high end of tactical practice. Don&#x27;t feel bad if you can only keep up with the first week.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;strategy&quot;&gt;Strategy&lt;&#x2F;h2&gt;
&lt;p&gt;Strategy is about the broader ecosystem. 
It&#x27;s also about knowing your tools and getting comfortable with them.
It&#x27;s about being able to modularize your code in a sensible way, to scale it from 100 to 1000 lines and beyond.
Strategy enables you to build powerful applications without being wasteful in the process.
Importing 10 python libraries that do the heavy lifting and writing 100 lines of uninspired glue code to hold it together is a sign of good strategy.
Build applications and get to know one or more languages in more depth to get better at this.
You learn over time what to delegate to a library and what to write yourself. 
You learn to read documentation and search for information online.
You learn what kind of modularization works for you.
Perhaps you can start by writing a discord bot. Maybe host a dynamic website or an api.
The reasonable high end for strategy would be to write a simple 2D game.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;project-management&quot;&gt;Project Management&lt;&#x2F;h2&gt;
&lt;p&gt;Strategic skill shouldn&#x27;t be confused with project management skill.
Finishing projects takes more than just strategy.
Knowing how to prioritize issues during maintenance is management skill.
As is finding out your minimum viable product and working towards that milestone before implementing non-essentials.
The whole issue of scope is at the core of project management, especially when coding as a hobby or alone.
As a general rule of thumb, good project management is about knowing what not to do, rather than about knowing what to do.
It&#x27;s about being critical of your own ideas and about writing software that doesn&#x27;t just work but is useful as well.
While you gain strategic skill &lt;em&gt;during&lt;&#x2F;em&gt; a project, you can practice your management at the start and then again towards the end of a project.
Knowing basic task management and having common sense is enough here.
Don&#x27;t get caught up in agile bullshit, useful patterns in your programming practice will emerge on their own and don&#x27;t need to be prescribed.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;be-well-rounded&quot;&gt;Be well rounded&lt;&#x2F;h2&gt;
&lt;p&gt;A well rounded programmer should work on improving all three dimensions of their programming skill.
But if you&#x27;re going to emphasise one over the other, do more tactics than strategy and more strategy than management.&lt;&#x2F;p&gt;
&lt;p&gt;Most importantly, learn to have fun while coding.
Learn to be proud of your work, even if it isn&#x27;t much in the grand scheme of things.
We programmers are blessed with the ability to move mountains through our keyboards and screens.
Appreciate that.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 2022 year review</title>
            <pubDate>Sat, 31 Dec 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/year-review22/</link>
            <guid>https://port19.xyz/year-review22/</guid>
            <description>&lt;h1 id=&quot;looking-back-on-the-past-year&quot;&gt;Looking back on the past year&lt;&#x2F;h1&gt;
&lt;p&gt;This year has been my first full year as a CS student.
I&#x27;ve learned a lot and made a ton of progress as a programmer.
I tried many programming languages and learned many tools that will help me in the future.
My linux setup and software selection has been continously refined to where it is now.
I&#x27;m proud of my work this year and want to take a few minutes to reflect it. &lt;&#x2F;p&gt;
&lt;p&gt;My top 3 good descisions this year:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;learning emacs&lt;&#x2F;li&gt;
&lt;li&gt;learning git&lt;&#x2F;li&gt;
&lt;li&gt;learning clojure&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;My top 3 mistakes this year:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;vimwiki &#x2F; my attempt to go back to neovim&lt;&#x2F;li&gt;
&lt;li&gt;coding very little over the summer&lt;&#x2F;li&gt;
&lt;li&gt;an overemphasis on tools over competence&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;languages&quot;&gt;Languages&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;shell&quot;&gt;Shell&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;easy to read, hard to write&lt;&#x2F;li&gt;
&lt;li&gt;domain specific&lt;&#x2F;li&gt;
&lt;li&gt;well suited for system task automation and string processing&lt;&#x2F;li&gt;
&lt;li&gt;very intuitive for experienced linux terminal users&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;prolog&quot;&gt;Prolog&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;conditional unification and variable binding are interesting concepts&lt;&#x2F;li&gt;
&lt;li&gt;swi prolog sucks a bit less than other dialects&lt;&#x2F;li&gt;
&lt;li&gt;maybe revisit in the future&lt;&#x2F;li&gt;
&lt;li&gt;book: &amp;quot;logic programming with prolog&amp;quot;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;lua&quot;&gt;Lua&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;one indexed arrays are cancer&lt;&#x2F;li&gt;
&lt;li&gt;syntax is meh&lt;&#x2F;li&gt;
&lt;li&gt;ecosystem is rather small&lt;&#x2F;li&gt;
&lt;li&gt;hard to justify learning or spending time with&lt;&#x2F;li&gt;
&lt;li&gt;boring &#x2F; unenlightening&lt;&#x2F;li&gt;
&lt;li&gt;löve2d not worth it on it&#x27;s own&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;java&quot;&gt;Java&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;massive pain in the ass&lt;&#x2F;li&gt;
&lt;li&gt;unjustifiable to learn for intellectual progress&lt;&#x2F;li&gt;
&lt;li&gt;not just unenlightening: it makes you a worse programmer&lt;&#x2F;li&gt;
&lt;li&gt;oop is the most braindead ideology in programming&lt;&#x2F;li&gt;
&lt;li&gt;swing just makes things more frustrating&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;go&quot;&gt;Go&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;simplicity&lt;&#x2F;li&gt;
&lt;li&gt;almost all basic list utilities missing&lt;&#x2F;li&gt;
&lt;li&gt;unreasonably hard to juggle data with&lt;&#x2F;li&gt;
&lt;li&gt;suprisingly vast ecosystem&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;haskell&quot;&gt;Haskell&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;good for artificial coding problems&#x2F;wrangling data&lt;&#x2F;li&gt;
&lt;li&gt;extremely powerful for lists&lt;&#x2F;li&gt;
&lt;li&gt;recursion thinking&lt;&#x2F;li&gt;
&lt;li&gt;higher order funcitons (map, reduce, fold)&lt;&#x2F;li&gt;
&lt;li&gt;nice syntax (guards, texas ranger, few special characters)&lt;&#x2F;li&gt;
&lt;li&gt;steep onboarding if you want to make actual programs with it&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;clojure&quot;&gt;Clojure&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;new main language&lt;&#x2F;li&gt;
&lt;li&gt;extremely fast feedback loop&lt;&#x2F;li&gt;
&lt;li&gt;nice syntax after you get used to it&lt;&#x2F;li&gt;
&lt;li&gt;good to have cljs to have a browser deployment option&lt;&#x2F;li&gt;
&lt;li&gt;enough libraries to support every large usecase&lt;&#x2F;li&gt;
&lt;li&gt;very competent community members&lt;&#x2F;li&gt;
&lt;li&gt;rich hickey is a great communicator&lt;&#x2F;li&gt;
&lt;li&gt;very tasteful language design&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;common-lisp&quot;&gt;Common Lisp&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;archaeic function names&lt;&#x2F;li&gt;
&lt;li&gt;clojure has better ux&lt;&#x2F;li&gt;
&lt;li&gt;common lisp may still be worth it for vast builtins and native compilation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tooling&quot;&gt;Tooling&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;emacs&quot;&gt;Emacs&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;org mode is huge&lt;&#x2F;li&gt;
&lt;li&gt;evil mode is a must&lt;&#x2F;li&gt;
&lt;li&gt;magit is pretty neat&lt;&#x2F;li&gt;
&lt;li&gt;prettify symbols mode is nice for math&lt;&#x2F;li&gt;
&lt;li&gt;emms is a buggy mess&lt;&#x2F;li&gt;
&lt;li&gt;emacs itself is quite buggy&lt;&#x2F;li&gt;
&lt;li&gt;don&#x27;t bother with gnu emacs&lt;&#x2F;li&gt;
&lt;li&gt;emacs is slow&lt;&#x2F;li&gt;
&lt;li&gt;emacs is not a replacement for a windowmanager + terminal applications&lt;&#x2F;li&gt;
&lt;li&gt;emacs native comp greatly mitigates performance problems&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;git&quot;&gt;Git&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;rebases&lt;&#x2F;li&gt;
&lt;li&gt;tags, stashes&lt;&#x2F;li&gt;
&lt;li&gt;multiple remotes&lt;&#x2F;li&gt;
&lt;li&gt;pr-review-release workflow&lt;&#x2F;li&gt;
&lt;li&gt;writing good release notes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dotfiles&quot;&gt;Dotfiles&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;two git remotes&lt;&#x2F;li&gt;
&lt;li&gt;semantic commits&lt;&#x2F;li&gt;
&lt;li&gt;refining software selection&lt;&#x2F;li&gt;
&lt;li&gt;pkgbuild as an install script&lt;&#x2F;li&gt;
&lt;li&gt;literate config&lt;&#x2F;li&gt;
&lt;li&gt;advanced bootstrapping&lt;&#x2F;li&gt;
&lt;li&gt;more zsh functions&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;latex&quot;&gt;Latex&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;beautiful for papers&lt;&#x2F;li&gt;
&lt;li&gt;hard to get a good org+latex setup up and running&lt;&#x2F;li&gt;
&lt;li&gt;bad syntax by default. Solution: org-mode + latex&lt;&#x2F;li&gt;
&lt;li&gt;good bibliography management and citations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zola&quot;&gt;Zola&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;timestamped posts list&lt;&#x2F;li&gt;
&lt;li&gt;decent landing page&lt;&#x2F;li&gt;
&lt;li&gt;decent css&lt;&#x2F;li&gt;
&lt;li&gt;migrated old posts&lt;&#x2F;li&gt;
&lt;li&gt;templating is neat&lt;&#x2F;li&gt;
&lt;li&gt;simple deployment&lt;&#x2F;li&gt;
&lt;li&gt;rss feed&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;others&quot;&gt;Others&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;ffmpeg&lt;&#x2F;li&gt;
&lt;li&gt;imagemagick&lt;&#x2F;li&gt;
&lt;li&gt;sourcehut&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;projects&quot;&gt;Projects&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;lead-ani-cli-shell&quot;&gt;Lead ani-cli (shell)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;people will contribute if you make it easy&lt;&#x2F;li&gt;
&lt;li&gt;issue tags are a must have&lt;&#x2F;li&gt;
&lt;li&gt;learning git is worth it&lt;&#x2F;li&gt;
&lt;li&gt;shellcheck is nice&lt;&#x2F;li&gt;
&lt;li&gt;shell is 3x as hard to write as python and 10x as hard to read&lt;&#x2F;li&gt;
&lt;li&gt;removing features is harder than adding them&lt;&#x2F;li&gt;
&lt;li&gt;semantic commits!&lt;&#x2F;li&gt;
&lt;li&gt;managing outages&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;kicklistbot2-clojure&quot;&gt;Kicklistbot2 (clojure)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;leiningen&lt;&#x2F;li&gt;
&lt;li&gt;clj-http, cheshire&lt;&#x2F;li&gt;
&lt;li&gt;first application of clojures awesome data processing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dvd-animation-clojure&quot;&gt;Dvd Animation (clojure)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;collisions can be tough&lt;&#x2F;li&gt;
&lt;li&gt;functional state management via elm architecture&lt;&#x2F;li&gt;
&lt;li&gt;first contact with cljs&lt;&#x2F;li&gt;
&lt;li&gt;made a video tutorial series with it&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;redqu-clojure&quot;&gt;Redqu (clojure)&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;never climb the tree when you can shoot down the apple&lt;&#x2F;li&gt;
&lt;li&gt;reddit rss is counterintuitively easier to parse than json&lt;&#x2F;li&gt;
&lt;li&gt;nix-clj has bad ux and doesn&#x27;t really work + has huge build times&lt;&#x2F;li&gt;
&lt;li&gt;standard clj build tools&lt;&#x2F;li&gt;
&lt;li&gt;distributing clojure is a pain due to lack of native binaries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>💻 On FOSS Licenses</title>
            <pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/licenses/</link>
            <guid>https://port19.xyz/licenses/</guid>
            <description>&lt;h1 id=&quot;how-i-choose-open-source-licenses&quot;&gt;How I choose Open Source Licenses&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;the-four-freedoms&quot;&gt;The Four Freedoms&lt;&#x2F;h2&gt;
&lt;p&gt;The four freedoms are what makes free software free.
They are defined by the &lt;a href=&quot;https:&#x2F;&#x2F;www.fsf.org&#x2F;&quot;&gt;Free Software Foundation&lt;&#x2F;a&gt;, pioneered by Richard Stallman.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Use: Free Software can be used for any purpose and is free of restrictions such as licence expiry or geographic limitations.&lt;&#x2F;li&gt;
&lt;li&gt;Study: Free Software and its code can be studied by anyone, without non-disclosure agreements or similar restrictions.&lt;&#x2F;li&gt;
&lt;li&gt;Share: Free Software can be shared and copied at virtually no cost.&lt;&#x2F;li&gt;
&lt;li&gt;Improve: Free Software can be modified by anyone, and these improvements can be shared publicly.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;philosophy&#x2F;free-sw.en.html&quot;&gt;More verbosely elaborated on by the FSF&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The open source definition has a few more clauses, but broadly aligns with free software.
You can read up on the ten clauses &lt;a href=&quot;https:&#x2F;&#x2F;opensource.org&#x2F;osd&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;permissive-vs-copyleft&quot;&gt;Permissive vs Copyleft&lt;&#x2F;h2&gt;
&lt;p&gt;Permissive licenses pose very limited restrictions at best.
Copyleft denotes a type of FOSS license that prevents the &amp;quot;propietization&amp;quot; of FOSS code.
Permissive licenses mostly let people do whatever they want with the software.
Copyleft licenses aim to protect the software from ill intent, protecting it&#x27;s freedom.&lt;&#x2F;p&gt;
&lt;p&gt;In the following I&#x27;ll treat public domain licenses as permissive licenses.
I call less restrictive licenses weak and more restrictive licenses strong.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;permissive-licenses&quot;&gt;Permissive Licenses&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;CC0: The best public domain dedication&lt;&#x2F;li&gt;
&lt;li&gt;MIT&#x2F;BSD: License copy must be included&lt;&#x2F;li&gt;
&lt;li&gt;Apache: License copy + changes must be documented&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;copyleft-licenses&quot;&gt;Copyleft Licenses&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;Mozilla: Modifications of existing files have same license&lt;&#x2F;li&gt;
&lt;li&gt;GPLv2: Actual full copyleft&lt;&#x2F;li&gt;
&lt;li&gt;LGPLv3: GPLv3 unless used as a library, if used as a library no copyleft.&lt;&#x2F;li&gt;
&lt;li&gt;GPLv3: GPLv2 + anti tivoization + drm protection + minor improvements. &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;41460&#x2F;what-are-the-differences-between-gpl-v2-and-gpl-v3-licenses&quot;&gt;good stack overflow post&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;AGPLv3: GPLv3 + network use is distribution. protects back end software. &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;licenses&#x2F;why-affero-gpl.en.html&quot;&gt;reasoning by the fsf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;choosing-between-apache-mit-and-cc0&quot;&gt;Choosing between Apache, Mit and CC0&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Don&#x27;t care at all? Use CC0&lt;&#x2F;li&gt;
&lt;li&gt;Need license copy on distribution? Use MIT&lt;&#x2F;li&gt;
&lt;li&gt;Also want changes to be listed? Use Apache&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;choosing-between-the-gpls&quot;&gt;Choosing between The GPLs&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Writing a library? Use the LGPLv3&lt;&#x2F;li&gt;
&lt;li&gt;Writing a backend service? Use the AGPLv3&lt;&#x2F;li&gt;
&lt;li&gt;Otherwise use the GPLv3&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;do-i-care-about-this-software&quot;&gt;Do I care about this Software?&lt;&#x2F;h2&gt;
&lt;p&gt;If I care about the software I&#x27;m writing and plan to invest significant time and ressources into it&#x27;s development.
If the Software is or could be useful to other people and get actual users.
If my Software has value beyond the code, beyond being a subject of education.
Then I&#x27;ll license it under a GPLv3, or a derivative if applicable.&lt;&#x2F;p&gt;
&lt;p&gt;If the Software has been a coding exercise or educational resource.
If the Software is small in scope and didn&#x27;t require much time or effort.
If the Software is useful to me but to few others.
Then I&#x27;ll license it under the CC0 and dedicate it under the public domain.&lt;&#x2F;p&gt;
&lt;p&gt;CC0 and GPLv3 are polar opposites, yet I use both. I hope I was able to explain why.&lt;&#x2F;p&gt;
&lt;p&gt;If you hold different views and want to explore the alternatives, check out &lt;a href=&quot;https:&#x2F;&#x2F;choosealicense.com&#x2F;&quot;&gt;choosalicense.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Hugo is inexcusably bad</title>
            <pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/zola/</link>
            <guid>https://port19.xyz/zola/</guid>
            <description>&lt;h1 id=&quot;why-this-blog-uses-zola-instead-of-hugo&quot;&gt;Why this blog uses Zola instead of Hugo&lt;&#x2F;h1&gt;
&lt;p&gt;Before I get started, I should note that hugo is still less horrible than most of the crimes committed by javascript devs and pushed as static site generators.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hugo-onboarding-is-a-nightmare&quot;&gt;Hugo onboarding is a nightmare&lt;&#x2F;h2&gt;
&lt;p&gt;I spent several hours across a few days trying to get hugo to suit my needs.
As with every static site generator, getting the first piece of html served is no problem and I got through the basics fast.
Getting just a little further, I really enjoyed luke smiths video and followed &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZFL09qhKi5I&quot;&gt;his tutorial&lt;&#x2F;a&gt; with his theme, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LukeSmithxyz&#x2F;lugo&quot;&gt;lugo&lt;&#x2F;a&gt;.
Aside from some things not looking as expected because of some recent commits that I rolled back things somewhat worked.
But now I wanted to customize and get the directory structure to make sense.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-the-fuck-is-a-theme&quot;&gt;What the fuck is a theme&lt;&#x2F;h2&gt;
&lt;p&gt;Essentially defaults. Defaults that hugo seems to not have out of the box.
You can overwrite anything set in the themes directory in your own directories.
The themes directory and it&#x27;s contents just mimic the directory structure at the root of your project.
&amp;quot;Using Hugo without a theme&amp;quot; spit out pretty garbage search results.
But one forum post stuck out and actually managed to answer the simple question of wether it&#x27;s possible.
&lt;a href=&quot;https:&#x2F;&#x2F;discourse.gohugo.io&#x2F;t&#x2F;solved-is-a-theme-a-requirement&#x2F;2154&quot;&gt;It is&lt;&#x2F;a&gt;, by just copying the themes files directly into the projects local folder.
That ship has sailed for me, then and there.
I want to write my own templates and craft my own website.
The vast majority of hugo users prefers precrafted templates and layouts and only customizes those sporadically.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;towards-a-less-cringe-alternative&quot;&gt;Towards a less cringe alternative&lt;&#x2F;h2&gt;
&lt;p&gt;I stopped for the day and browsed some of &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;@bugswriter_&quot;&gt;bugswriters&lt;&#x2F;a&gt; videos.
His &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=V_qy1BnEMCc&quot;&gt;introduction to zola&lt;&#x2F;a&gt; quickly had me sold.
Actually usable documentation.
A non-moronic directory structure.
No theme required by default, you write the templates yourself.
Unpolluted search results when checking for details.
Thats where I left off.  Convinced of zola but not yet applying it.&lt;&#x2F;p&gt;
&lt;p&gt;So the better answer to &amp;quot;Using Hugo without a theme&amp;quot; would have been &amp;quot;Use zola&amp;quot;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;migration&quot;&gt;Migration&lt;&#x2F;h2&gt;
&lt;p&gt;Then, yesterday, I started migrating most of my blog posts from vimwiki to markdown and Zola.
After having ported 2 articles I made sure to spice up my landing page, which I did for a few hours.
Understanding how to generate sorted sections was a matter of understanding the templating language.
But luckily &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&#x2F;docs&#x2F;#getting-started&quot;&gt;Tera&lt;&#x2F;a&gt; is just as well documented as &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;overview&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt; itself.
I rewrote my css, being inspired by &lt;a href=&quot;https:&#x2F;&#x2F;lukesmith.xyz&#x2F;&quot;&gt;lukesmiths webpage&lt;&#x2F;a&gt; in many details.
To get back the categories I used by convention in vimwiki, I just prepended the site title with a unicode character and then filtered by those.
Taxonomies&#x2F;tags are inherently hard to work with, zola makes it somewhat accessible but I don&#x27;t want to deal with them until I have a real need.
After several hours of crafting my webpage it has become what you see now.
I&#x27;m sure I&#x27;ll hack away at the css some more and my index.html will grow organically.
But it&#x27;s mostly done and I&#x27;m very happy I went with zola over hugo.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 Why I like Monoliths</title>
            <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/monoliths/</link>
            <guid>https://port19.xyz/monoliths/</guid>
            <description>&lt;h1 id=&quot;on-monoliths&quot;&gt;On Monoliths&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;why-do-people-gravitate-to-modular-architectures&quot;&gt;Why do people gravitate to modular architectures&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;Scalability&amp;quot;: both in terms of performance and project size&lt;&#x2F;em&gt;
I may choose to write another article about this phenomena, but for some reason developers fear performance issues more than anything else.
For this article it&#x27;s enough to say that your pet project will likely never have any issues regarding performance.
Even a raspberry pi will handle the traffic of several thousands of daily users for most scenarios.&lt;&#x2F;p&gt;
&lt;p&gt;More important to most developers, they allow for a more rigid separation of concerns, useful for scaling a development team to more than 2-3 devs.
If your scope becomes large enough you can no longer have a whole team work on one closely coupled set of classes &#x2F; modules &#x2F; files with code.
It is also worth noting that some applications inherently benefit from some form of modularization: a website without backend is, through technical means, limited in what it can accomplish.
The point I&#x27;m trying to make in this, admittedly, ranty article is not that a microservice architecture is &lt;em&gt;never&lt;&#x2F;em&gt; a good idea for anything.
My point is that it&#x27;s almost always a bad idea for small projects.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-beauty-of-the-monolith&quot;&gt;The beauty of the monolith&lt;&#x2F;h2&gt;
&lt;p&gt;I believe I can sell you the upsides of developing a monolith far better than the downsides of everything else.
A monolith, in the way I use the term, is any one self contained programm that is not strongly separated into pieces on a conceptual level.
You may still have different files where you write code in, but at it&#x27;s core the system is interdependent and tightly coupled.
A monolith&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Encourages minimalism &#x2F; discourages feature creep&lt;&#x2F;li&gt;
&lt;li&gt;Leaves complexity to be tackled head on in code, rather than to be abstracted away&lt;&#x2F;li&gt;
&lt;li&gt;Is easy to grasp and reason about&lt;&#x2F;li&gt;
&lt;li&gt;Is easy to deploy &#x2F; package&lt;&#x2F;li&gt;
&lt;li&gt;Is easy to finish&lt;&#x2F;li&gt;
&lt;li&gt;Can reach a high degree of polish&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;the-design-process&quot;&gt;The design process&lt;&#x2F;h2&gt;
&lt;p&gt;As a matter of product design, let&#x27;s return to the example of a website.
After answering the basic questions, what it is and who it&#x27;s for, ask yourself wether it needs a backend.
Do you need to dynamically change contents on the page? No? Maybe don&#x27;t use a backend.
Do you need to store and&#x2F;or process user data? No? Why use a backend.
Is your website just a pile of documents to be viewed in a browser? Yes? Use html, css and maybe a static site generator. No backend.
Is your website capable of running purely on the clientside? Yes? Write some js and don&#x27;t dare to phone home to a backend.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Modularize as little as possible, but as much as necessary&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If one minor feature would require modularization, but it doesn&#x27;t contribute much to the overall value: &lt;em&gt;just don&#x27;t include it&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;don-t-solve-problems-you-don-t-have&quot;&gt;Don&#x27;t solve problems you don&#x27;t have&lt;&#x2F;h2&gt;
&lt;p&gt;You have enough problems as is. You have a product to develop. A project to hack on.
You gain nothing from preparing yourself for an unlikely future.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>📚 2022 Jog Log</title>
            <pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/joglog22/</link>
            <guid>https://port19.xyz/joglog22/</guid>
            <description>&lt;p&gt;I like to jog for about 20-30 minutes and aim for twice a week&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;ID&lt;&#x2F;th&gt;&lt;th&gt;Date&lt;&#x2F;th&gt;&lt;th&gt;Minutes&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;01&lt;&#x2F;td&gt;&lt;td&gt;03.1.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;02&lt;&#x2F;td&gt;&lt;td&gt;20.1.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;03&lt;&#x2F;td&gt;&lt;td&gt;31.1.&lt;&#x2F;td&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;04&lt;&#x2F;td&gt;&lt;td&gt;05.2.&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;05&lt;&#x2F;td&gt;&lt;td&gt;15.2.&lt;&#x2F;td&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;06&lt;&#x2F;td&gt;&lt;td&gt;17.2.&lt;&#x2F;td&gt;&lt;td&gt;32&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;07&lt;&#x2F;td&gt;&lt;td&gt;21.2.&lt;&#x2F;td&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;08&lt;&#x2F;td&gt;&lt;td&gt;24.2.&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;09&lt;&#x2F;td&gt;&lt;td&gt;28.2.&lt;&#x2F;td&gt;&lt;td&gt;&lt;em&gt;40&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;14.3.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;21.3.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;22.3.&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;25.3.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;30.3.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;18.4.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;16&lt;&#x2F;td&gt;&lt;td&gt;22.4.&lt;&#x2F;td&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;17&lt;&#x2F;td&gt;&lt;td&gt;25.4.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;18&lt;&#x2F;td&gt;&lt;td&gt;29.4.&lt;&#x2F;td&gt;&lt;td&gt;34&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;td&gt;01.5.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;td&gt;03.5.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;td&gt;05.5.&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;td&gt;07.5.&lt;&#x2F;td&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;td&gt;11.5.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;td&gt;16.5.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;19.5.&lt;&#x2F;td&gt;&lt;td&gt;19&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;31.5.&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;27&lt;&#x2F;td&gt;&lt;td&gt;03.6.&lt;&#x2F;td&gt;&lt;td&gt;&lt;em&gt;70&lt;&#x2F;em&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;td&gt;10.6.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;29&lt;&#x2F;td&gt;&lt;td&gt;14.6.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;30&lt;&#x2F;td&gt;&lt;td&gt;18.6.&lt;&#x2F;td&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;31&lt;&#x2F;td&gt;&lt;td&gt;20.6.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;32&lt;&#x2F;td&gt;&lt;td&gt;21.6.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;33&lt;&#x2F;td&gt;&lt;td&gt;22.6.&lt;&#x2F;td&gt;&lt;td&gt;23&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;34&lt;&#x2F;td&gt;&lt;td&gt;23.6.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;35&lt;&#x2F;td&gt;&lt;td&gt;26.6.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;36&lt;&#x2F;td&gt;&lt;td&gt;27.6.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;37&lt;&#x2F;td&gt;&lt;td&gt;29.6.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;38&lt;&#x2F;td&gt;&lt;td&gt;20.7.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;39&lt;&#x2F;td&gt;&lt;td&gt;25.7.&lt;&#x2F;td&gt;&lt;td&gt;21&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;40&lt;&#x2F;td&gt;&lt;td&gt;11.9.&lt;&#x2F;td&gt;&lt;td&gt;18&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;41&lt;&#x2F;td&gt;&lt;td&gt;24.9.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;42&lt;&#x2F;td&gt;&lt;td&gt;23.10.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;43&lt;&#x2F;td&gt;&lt;td&gt;28.10.&lt;&#x2F;td&gt;&lt;td&gt;21+19&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;44&lt;&#x2F;td&gt;&lt;td&gt;02.11.&lt;&#x2F;td&gt;&lt;td&gt;28&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;45&lt;&#x2F;td&gt;&lt;td&gt;04.11.&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;46&lt;&#x2F;td&gt;&lt;td&gt;07.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;47&lt;&#x2F;td&gt;&lt;td&gt;09.11.&lt;&#x2F;td&gt;&lt;td&gt;20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;48&lt;&#x2F;td&gt;&lt;td&gt;14.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;49&lt;&#x2F;td&gt;&lt;td&gt;15.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;50&lt;&#x2F;td&gt;&lt;td&gt;25.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;51&lt;&#x2F;td&gt;&lt;td&gt;26.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;52&lt;&#x2F;td&gt;&lt;td&gt;28.11.&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</description>
        </item>
        <item>
            <title>📚 Avoid Social Media</title>
            <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/avoid-social-media/</link>
            <guid>https://port19.xyz/avoid-social-media/</guid>
            <description>&lt;h1 id=&quot;social-media-wastes-your-time&quot;&gt;social media wastes your time&lt;&#x2F;h1&gt;
&lt;p&gt;Are you short on time? Always busy? Rarely get a full nights sleep?
Consider quitting youtube and other video content.
Especially if you&#x27;re trying to learn something new, keep up with news or genuinely have time to kill.&lt;&#x2F;p&gt;
&lt;p&gt;I was gonna title this &amp;quot;video content wastes your time&amp;quot;, but this is mostly applicable to social media and youtube.
One video is 10 more minutes.
Thats one 144th of your day of which a third is sleeping and most of the remainder is &lt;em&gt;not&lt;&#x2F;em&gt; free time.&lt;&#x2F;p&gt;
&lt;p&gt;1 more post on reddit, instagram or tik tok wastes less time. You know that and because you do it becomes a lot harder to stop scrolling.
One more isn&#x27;t much of a waste after all.&lt;&#x2F;p&gt;
&lt;p&gt;Seek and carefully select the media you consume to serve you, be it for entertainment or for education.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>💻 NixOS ain&#x27;t worth it</title>
            <pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/nixos/</link>
            <guid>https://port19.xyz/nixos/</guid>
            <description>&lt;h1 id=&quot;why-i-don-t-use-nix-os&quot;&gt;Why I don&#x27;t use nix os&lt;&#x2F;h1&gt;
&lt;p&gt;Nix OS is a reproducible linux distribution where system state is declaratively stored in a version controllable configuration.nix file.&lt;&#x2F;p&gt;
&lt;p&gt;Even today it already has significantly more packages than arch + aur and due to the boot setup you can always roll back your system, making it practically unbreakable.&lt;&#x2F;p&gt;
&lt;p&gt;But nix os is very different. &lt;&#x2F;p&gt;
&lt;p&gt;If you google an issue, the solutions you find will likely not apply.&lt;&#x2F;p&gt;
&lt;p&gt;Worse, the knowledge and skill you gain will not cary over to more traditional distros like debian or arch.&lt;&#x2F;p&gt;
&lt;p&gt;Nix os vs arch is more like openbsd vs arch rather than debian vs arch.&lt;&#x2F;p&gt;
&lt;p&gt;Sure, the kernel is still linux, but the whole system will feel unfamiliar.&lt;&#x2F;p&gt;
&lt;p&gt;Ask yourself, is reproducibility via configuration.nix worth it?&lt;&#x2F;p&gt;
&lt;p&gt;Or would you rather maintain your dotfiles and a package list?&lt;&#x2F;p&gt;
&lt;p&gt;Do you always need more or is arch + aur enough software?&lt;&#x2F;p&gt;
&lt;p&gt;Are rollbacks important to you and do you also have beef with the timeshift maintainer?&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re unsure, stay away from nix os.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hlissner&#x2F;dotfiles&quot;&gt;doom emacs maintainer agrees&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>📚 Floor Sleeping Review</title>
            <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/floor-sleeping-review/</link>
            <guid>https://port19.xyz/floor-sleeping-review/</guid>
            <description>&lt;p&gt;&lt;em&gt;tldr: not worth it&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve been a minimalist for several years now, so when a few months ago after a sleepover at a friends house I had already slept on the flor for two days, I decided to extend the experiment.&lt;&#x2F;p&gt;
&lt;p&gt;Sleeping in a sleeping bag got better up until day 4 or 5 where comfort plateaued. I then had 2 weeks of back and fourth between bed and floor before giving up my first real attempt.&lt;&#x2F;p&gt;
&lt;p&gt;I then tried again recently, but it&#x27;s still not very restful.
I can sleep and I&#x27;m functioning well the next morning, but the whole night feels shallow, like it&#x27;s just an extended nap. The 6mm yoga mat wasn&#x27;t thick enough to prevent sore spots after some time and it wasn&#x27;t wide enough to make sure my hands would never slide of if I wanted to place them to my side.&lt;&#x2F;p&gt;
&lt;p&gt;During both attempts I used my slippers as lumbar support which worked pretty well. I slept on my back. I also tried some side positions, which work but are inferior and only really viable if you need to move a bit to get to sleep.&lt;&#x2F;p&gt;
&lt;p&gt;It wasn&#x27;t all bad though, getting out of bed was easier and it saves space. You also give your body a workout while you sleep and will inevitably do 30+ minutes of various stretchy positions before you give laying still your first shot.&lt;&#x2F;p&gt;
&lt;p&gt;Maybe with a thicker yoga mat and some more tactical coushins I can remedy the disadvantages, but for the time being the floor can have it&#x27;s 2:0 win.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>📚 3 weeks without a smartphone</title>
            <pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/no-smartphone/</link>
            <guid>https://port19.xyz/no-smartphone/</guid>
            <description>&lt;h2 id=&quot;how-it-happened&quot;&gt;How it happened&lt;&#x2F;h2&gt;
&lt;p&gt;For the past 2 years I have been using the Google Pixel 3a and really liked it.
Since I greatly value my Privacy and Security I used it with Graphene OS and installed mostly open source software from Fdroid.
The days were numbered for the Pixel 3a, at first predictably, because the Pixel 3a would not recieve further security updates from Google after May 2022.
But it also had issues charging for about a year, which meant just jamming the charger in with a little more force and cleaning the port for a while until it became more and more of a problem in May.
On May 28th, after visiting a good friend for a few days, the phone ran out of battery and when I arrived home to charge it I couldn&#x27;t get it to charge for a few minutes, where I then gave up.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-i-got-the-featurephone&quot;&gt;How I got the featurephone&lt;&#x2F;h2&gt;
&lt;p&gt;But the switch wasn&#x27;t only one of necessity.
I had bought the phone I use now about a month prior to the Pixel 3a dying.
The CAT B40 seemed appealing to me since the day it came out, and the 50€ for what I still believe to be one of the best mass produced feature phones seemed so worth it that I bought it as a backup phone.
I even tried for 2 days in april, but wasn&#x27;t yet ready.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-not-just-buy-a-new-smartphone&quot;&gt;Why not just buy a new smartphone&lt;&#x2F;h2&gt;
&lt;p&gt;This is a question I&#x27;m undoubtedly going to get asked a whole lot in the coming months.
Short answer: they suck. For the long answer read ahead.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hardware&quot;&gt;Hardware&lt;&#x2F;h3&gt;
&lt;p&gt;If I wanted a new smartphone today, my primary option would be the Pixel 6a, said to release in a few weeks for 450€.
That is if I want to uphold my high standard of privacy and security.
If I was willing to compromise on that for the benefit of my wallet, I could walk into an electronics store today and get a decent-ish phone for 100-200€.
This doesn&#x27;t seem appealing to me, so if I change my mind in the coming weeks and return to a smartphone, it will likely be the Pixel 6a.
But even that phone doesn&#x27;t exactly tick all the boxes.
Sure, it&#x27;ll have even more performance to blow my pants off, the Pixel 3a had more than enough, but it&#x27;s larger again, I don&#x27;t like the silly multi-camera design of basically all phones today and it drops the headphone jack.
That all is forgivable, if it came at a decent price. 450€ is not a decent price for what is firmly a midrange phone today. I remember buying the pixel 3a at a discount for just over 200€.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;software&quot;&gt;Software&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s talk software for a bit.
I didn&#x27;t use my phone very extensively, I had whatsapp, signal, a few simple productivity apps, newpipe (a youtube client), infinity (a reddit client) and a webbrowser.
I used my phone for about 1-3 hours a day, and always had a love-hate relationship with it.&lt;&#x2F;p&gt;
&lt;p&gt;If whatsapp and signal had first class desktop support I would have switched to a featurephone months ago. But whatsapp web and signal desktop are clearly an afterthought.
In an ideal world they would be like webmail, or any other online account for that matter.
I open the browser, enter my username and password, and am free to communicate from whatever device I want.
Instead I have to sync it to my smartphone.&lt;&#x2F;p&gt;
&lt;p&gt;But I shouldn&#x27;t be too mad. Prior to the whatsapp multidevice beta this wouldn&#x27;t have been possible at all, since your phone needed an active internet connection for whatsapp desktop to work.
Now I have my smartphone at 80% battery powered off in a drawer for whenever I switch browsers or laptops and need to scan a qr code again.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lifestyle&quot;&gt;Lifestyle&lt;&#x2F;h3&gt;
&lt;p&gt;Up until now I&#x27;ve talked in details, but let&#x27;s look at the big picture.&lt;&#x2F;p&gt;
&lt;p&gt;At the end of the day the phone exists primarily to communicate.
If you need something from me and it&#x27;s urgent, call me.
If it could wait until the evening, send me a whatsapp message.
Many of us are very very connected. If you don&#x27;t return a message in minutes, something is off.
I don&#x27;t like that. Noone is entitled to my availability or a quick response.
I&#x27;m not afraid to miss out.&lt;&#x2F;p&gt;
&lt;p&gt;Secondarily, the phone is an entertainment device.
I don&#x27;t think my time spent watching youtube has dramatically decreased since my switch, I just entertain myself on my laptop instead.
Yesterday I watched the office for 8 hours in procrastination.
If you&#x27;re considering a feature phone, don&#x27;t lie to yourself and say it will miracolously cure your bad media consumption habits. 
I&#x27;m sure it will make a difference, but it won&#x27;t be lifechanging.&lt;&#x2F;p&gt;
&lt;p&gt;This has been incredibly rambly, but I hope you enjoyed seeing my perspective on things.&lt;&#x2F;p&gt;
</description>
        </item>
        <item>
            <title>🍽 Baked Chickpeas</title>
            <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/baked-chickpeas/</link>
            <guid>https://port19.xyz/baked-chickpeas/</guid>
            <description>&lt;h1 id=&quot;baked-chickpeas-recipe&quot;&gt;Baked Chickpeas Recipe&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Prep time: 10 min&lt;&#x2F;li&gt;
&lt;li&gt;Baking time: 35 min&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ingredients&quot;&gt;Ingredients&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;1 can of chickpeas&lt;&#x2F;li&gt;
&lt;li&gt;1 Spoon Spicemix (customize to your taste)
&lt;ul&gt;
&lt;li&gt;3 parts curry&lt;&#x2F;li&gt;
&lt;li&gt;3 parts white pepper&lt;&#x2F;li&gt;
&lt;li&gt;3 parts chilli powder&lt;&#x2F;li&gt;
&lt;li&gt;1 part cinnamon&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;1 Spoon Olive oil (or chili oil)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;baking pan&lt;&#x2F;li&gt;
&lt;li&gt;baking paper&lt;&#x2F;li&gt;
&lt;li&gt;deep plate&lt;&#x2F;li&gt;
&lt;li&gt;small bowl&lt;&#x2F;li&gt;
&lt;li&gt;kitchen towels&lt;&#x2F;li&gt;
&lt;li&gt;strainer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;directions&quot;&gt;Directions&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;(optionally) preheat the oven at 220°C top-bottom &lt;&#x2F;li&gt;
&lt;li&gt;Put the can of chickpeas into the strainer and rinse thoroughly&lt;&#x2F;li&gt;
&lt;li&gt;Using some kitchen towels, dry the chickpeas&lt;&#x2F;li&gt;
&lt;li&gt;During the drying, remove any loose shells or broken chickpeas&lt;&#x2F;li&gt;
&lt;li&gt;put baking paper on a pan and the chickpeas on the baking paper&lt;&#x2F;li&gt;
&lt;li&gt;put the pan into the oven and wait for 40 minutes if you didn&#x27;t preheat or 30 if you did&lt;&#x2F;li&gt;
&lt;li&gt;while waiting, prepare your spices in a small bowl and mix&lt;&#x2F;li&gt;
&lt;li&gt;pull the pan out the oven and put the hot chickpeas onto your plate&lt;&#x2F;li&gt;
&lt;li&gt;Wait a minute if necessary until you don&#x27;t burn yourself touching the chickpeas, but short enough that they are still hot&lt;&#x2F;li&gt;
&lt;li&gt;Put approximately 1 spoon of oil onto the chickpeas and mix with your hands so all chickpeas are covered&lt;&#x2F;li&gt;
&lt;li&gt;Now add the spice mix and mix again&lt;&#x2F;li&gt;
&lt;li&gt;Your hands are now very dirty, wash them&lt;&#x2F;li&gt;
&lt;li&gt;Enjoy&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>🍽 Overnight Oats</title>
            <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/overnight-oats/</link>
            <guid>https://port19.xyz/overnight-oats/</guid>
            <description>&lt;h1 id=&quot;overnight-oats-recipe&quot;&gt;Overnight Oats Recipe&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Prep time: 5 min&lt;&#x2F;li&gt;
&lt;li&gt;Fridge time: 6-12 hours&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ingredients&quot;&gt;Ingredients&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;200 ml oatmeal &lt;&#x2F;li&gt;
&lt;li&gt;handful of raspberries&lt;&#x2F;li&gt;
&lt;li&gt;150-200 ml of milk&lt;&#x2F;li&gt;
&lt;li&gt;(optional) 1 heaping teaspoon of flavored protein powder&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;bowl&lt;&#x2F;li&gt;
&lt;li&gt;plate&lt;&#x2F;li&gt;
&lt;li&gt;spoon&lt;&#x2F;li&gt;
&lt;li&gt;teaspoon&lt;&#x2F;li&gt;
&lt;li&gt;measuring cup&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;directions&quot;&gt;Directions&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;measure your oatmeal and add it to your bowl&lt;&#x2F;li&gt;
&lt;li&gt;now add the protein powder and mix&lt;&#x2F;li&gt;
&lt;li&gt;now add some raspberries, lightly mix again&lt;&#x2F;li&gt;
&lt;li&gt;add the milk and stab it with your spoon a few times&lt;&#x2F;li&gt;
&lt;li&gt;cover the bowl with a plate&lt;&#x2F;li&gt;
&lt;li&gt;put the covered bowl into your fridge&lt;&#x2F;li&gt;
&lt;li&gt;go to sleep&lt;&#x2F;li&gt;
&lt;li&gt;Enjoy with a healthy breakfast&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>🍽 Roasted Broccoli</title>
            <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/roasted-broccoli/</link>
            <guid>https://port19.xyz/roasted-broccoli/</guid>
            <description>&lt;h1 id=&quot;roasted-broccoli-recipe&quot;&gt;Roasted Broccoli Recipe&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Prep time: 5 min&lt;&#x2F;li&gt;
&lt;li&gt;Cooking time: 10 min&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ingredients&quot;&gt;Ingredients&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;1 unit of broccoli&lt;&#x2F;li&gt;
&lt;li&gt;some chili oil (or olive oil)&lt;&#x2F;li&gt;
&lt;li&gt;1 trunk&lt;&#x2F;li&gt;
&lt;li&gt;(optional) 1 chilli&lt;&#x2F;li&gt;
&lt;li&gt;(optional) spices (curry fits very well)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;frying pan&lt;&#x2F;li&gt;
&lt;li&gt;cooking spoon&lt;&#x2F;li&gt;
&lt;li&gt;cutting board&lt;&#x2F;li&gt;
&lt;li&gt;bowl&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;directions&quot;&gt;Directions&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;briefly rinse the broccoli under cold water&lt;&#x2F;li&gt;
&lt;li&gt;cut the brocolli to get only the flowering heads&lt;&#x2F;li&gt;
&lt;li&gt;heat some oil in the pan so that the bottom is covered, no more than necessary&lt;&#x2F;li&gt;
&lt;li&gt;cut the chilli in slices and add to the broccoli (if applicable)&lt;&#x2F;li&gt;
&lt;li&gt;(optional) add some spices&lt;&#x2F;li&gt;
&lt;li&gt;Put in the broccoli heads and move the broccoli around about once a minute&lt;&#x2F;li&gt;
&lt;li&gt;Put the finished broccoli with the chilli into your bowl&lt;&#x2F;li&gt;
&lt;li&gt;Enjoy with chopsticks&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>💻 Cool Searx Bangs</title>
            <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/searx/</link>
            <guid>https://port19.xyz/searx/</guid>
            <description>&lt;h1 id=&quot;cool-searx-bangs&quot;&gt;Cool Searx Bangs&lt;&#x2F;h1&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Category&lt;&#x2F;th&gt;&lt;th&gt;Bang&lt;&#x2F;th&gt;&lt;th&gt;Site&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;serch engines&lt;&#x2F;td&gt;&lt;td&gt;ddg&lt;&#x2F;td&gt;&lt;td&gt;duckduckgo&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;serch engines&lt;&#x2F;td&gt;&lt;td&gt;brave&lt;&#x2F;td&gt;&lt;td&gt;brave&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;serch engines&lt;&#x2F;td&gt;&lt;td&gt;qw&lt;&#x2F;td&gt;&lt;td&gt;qwant&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;serch engines&lt;&#x2F;td&gt;&lt;td&gt;wib&lt;&#x2F;td&gt;&lt;td&gt;wibby&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;search engines&lt;&#x2F;td&gt;&lt;td&gt;wp&lt;&#x2F;td&gt;&lt;td&gt;wikipedia&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;search engines&lt;&#x2F;td&gt;&lt;td&gt;sp&lt;&#x2F;td&gt;&lt;td&gt;startpage&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;map&lt;&#x2F;td&gt;&lt;td&gt;osm&lt;&#x2F;td&gt;&lt;td&gt;openstreetmap&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;music&lt;&#x2F;td&gt;&lt;td&gt;mc&lt;&#x2F;td&gt;&lt;td&gt;mixcloud&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;music&lt;&#x2F;td&gt;&lt;td&gt;yt&lt;&#x2F;td&gt;&lt;td&gt;youtube&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;it&lt;&#x2F;td&gt;&lt;td&gt;st&lt;&#x2F;td&gt;&lt;td&gt;stackoverflow&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;it&lt;&#x2F;td&gt;&lt;td&gt;gh&lt;&#x2F;td&gt;&lt;td&gt;github&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;it&lt;&#x2F;td&gt;&lt;td&gt;al&lt;&#x2F;td&gt;&lt;td&gt;arch wiki&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;it&lt;&#x2F;td&gt;&lt;td&gt;ge&lt;&#x2F;td&gt;&lt;td&gt;gentoo wiki&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;piracy&lt;&#x2F;td&gt;&lt;td&gt;1337x&lt;&#x2F;td&gt;&lt;td&gt;1337x&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;piracy&lt;&#x2F;td&gt;&lt;td&gt;nt&lt;&#x2F;td&gt;&lt;td&gt;nyaa&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;piracy&lt;&#x2F;td&gt;&lt;td&gt;tt&lt;&#x2F;td&gt;&lt;td&gt;tokyotoshokan&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;piracy&lt;&#x2F;td&gt;&lt;td&gt;zlib&lt;&#x2F;td&gt;&lt;td&gt;z-library&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;social media&lt;&#x2F;td&gt;&lt;td&gt;re&lt;&#x2F;td&gt;&lt;td&gt;reddit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;other&lt;&#x2F;td&gt;&lt;td&gt;du&lt;&#x2F;td&gt;&lt;td&gt;duden&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;other&lt;&#x2F;td&gt;&lt;td&gt;wa&lt;&#x2F;td&gt;&lt;td&gt;wolframalpha&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</description>
        </item>
        <item>
            <title>💻 Why Emacs?</title>
            <pubDate>Sat, 19 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/emacs/</link>
            <guid>https://port19.xyz/emacs/</guid>
            <description>&lt;h2 id=&quot;keep-those-vim-bindings&quot;&gt;Keep those vim bindings&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Emacs: Escape Meta Alt Control Shift&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Trying to choose between vim and emacs is pointless. Vim has far superior keybindings, while emacs is far more powerful.
&lt;em&gt;Evil mode&lt;&#x2F;em&gt; allows you to keep your beloved vim bindings making text editing inside emacs not just familiar, but nearly identical to text editing in vim with only a few rare edge cases.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;don-t-try-gnu-emacs&quot;&gt;Don&#x27;t try GNU Emacs&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Use doom emacs instead&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Two months before switching from vim to doom emacs as my primary editor I sunk half a workday into trying out GNU emacs.
A blinding wite canvas, terrible icons, no clear instructions, trash keybindings and confusing documentation scared me off. I left GNU emacs with more questions than answers.
Now you might be someone who likes to configure his stuff, and believe me I&#x27;m no different, but emacs really is an exception you should make.
I have heard stories of people spending a week with GNU emacs before even getting down the basics and then proceeding to spend another month constantly tweaking their config before slowly approaching a comfortable environment.
Don&#x27;t waste your time.&lt;&#x2F;p&gt;
&lt;p&gt;Doom emacs and spacemacs are two solid options, both focussing on ex vim users.
I am using doom emacs and think it is the better option if you still want to configure some things, but also want a solid foundation allowing you to get work done right away.
If you need everything and the kitchen sink and don&#x27;t care about bloat, spacemacs might be better suited to your needs.
With doom &lt;em&gt;I got productive in one day&lt;&#x2F;em&gt;, most of which was learning org mode.
Doom is pretty and welcoming out of the box, with config files that are easy to understand and intuitive defaults.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;don-t-live-in-emacs&quot;&gt;Don&#x27;t live in Emacs&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;Your rice is tasty enough&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The next trap is thinking you have to live inside emacs, or that that would even be beneficial.
Many vim users call emacs a fine operating system in lack of a good text editor but if you already have a nice tiling wm setup you will gain nothing from trying to move all your stuff into emacs.
I tried it out for the sake of experimentation and found most emacs alternatives to my software to be either more buggy, slower, or often both.
Two extreme cases were emms (emacs multimedia system) and a pdf mode that I forgot the name of.
Emms choked on my pipewire config a few times and complained about some mpv scripts, while also generally providing a worse experience than cmus, moc or even standalone mpv.
The pdf mode took a few seconds to buffer when I tried to skip a few pages by holding down j.
Using mupdf I can fly through 1000 pages of pdf without hickups no problem.
Some tasks where moving them into emacs could provide some value: email (mu4e), rss (elfeed), git (magit)
If you&#x27;re happy with your current application stack, keep using it and just use emacs for text editing and org mode.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;org-mode&quot;&gt;Org mode&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;The swiss army knife&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I don&#x27;t really use emacs, I use org mode.
Emacs just happens to be the platform org mode runs on.
At first glance you might confuse org mode to be just another markup language.
But it also offers strong support for literate programming and can be exported to whatever format your heart desires. Project management and scheduling facilities are the cherry on top.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;damn-good-markup&quot;&gt;Damn good markup&lt;&#x2F;h2&gt;
&lt;p&gt;At it&#x27;s core, org documents are trees. Your headings are foldable branches of that tree, enableing you to focus on what you are doing and hide away everything else.
This funcitons much like the code folding you know from popular IDEs.
If you really wanted to, you could throw everything in one org document without things getting confusing.
It supports tables to an extent no other markup language does.
Of course it supports standards like &lt;del&gt;strikethrough&lt;&#x2F;del&gt; &lt;em&gt;cursive&lt;&#x2F;em&gt; &lt;em&gt;bold&lt;&#x2F;em&gt; and &lt;code&gt;inline code&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;computational-notebooks&quot;&gt;Computational Notebooks&lt;&#x2F;h2&gt;
&lt;p&gt;I had a programming lecture this semester that taught java.
Instead of having many separate files for the exercises, I used one org document that is now 34KB large spanning ~1400 lines.
I used a top level heading for each chapter with subheadings for each exercise.
I wrote my code inside code blocks that I then executed, printing the output right below.
The todo functionality helped me keep track of what exercises I was still missing and my overall progress.
In later chapters I even discovered plantuml which enabled me to make a flowchart and embed it into my document before writing the main code.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re familiar with jupyter notebooks from the python ecosystem, org mode gives you pretty much the same functionality.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;exporting&quot;&gt;Exporting&lt;&#x2F;h2&gt;
&lt;p&gt;If you&#x27;re viewing this webpage right now, you may assume that I used some static site generator like hugo or jekyll to generate it, or even wrote the html by hand.
Luckily, I was able to conveniently write this entire page in org mode.
I use the admittedly long keychord of ~SPC m e h h~ to export it before checking it in my webbrowser and then pushing the changes to github where this website is hosted.
I&#x27;m really happy with that workflow so far.
In the coming months I may start exporting to odt, latex and pdf while writing my first scientific paper.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;life-management&quot;&gt;Life Management&lt;&#x2F;h2&gt;
&lt;p&gt;I prefer to use my phone for todo and expense tracking, but if I had to do those on my PC, I&#x27;d definitely use org.
Using tables you can easily get detailed financial statistics and if you combine this with literate programming you can easily get your feet wet with more detailed data analysis.
Using org-agenda you can keep track of your todos, schedule and prioritize them as well as use tags if you&#x27;re into that.
Org-capture enables you to take quick notes without interrupting your work, I plan to use this to keep track of my groceries list soon-ish.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learn-vim-first&quot;&gt;Learn vim first&lt;&#x2F;h2&gt;
&lt;p&gt;Some of you reading this might still use a graphical text editor like vscode, atom or sublime text.
If that is the case, contemplate a move towards vim first, you won&#x27;t regret it.
Hopping to emacs from vscode is like ging from crawling to running without ever learning to walk.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;links&quot;&gt;Links&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Official feature preview: [[https:&#x2F;&#x2F;orgmode.org&#x2F;features.html|org mode]]&lt;&#x2F;li&gt;
&lt;li&gt;Introductory video by DistroTube: [[https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=dr_iBj91eeI&amp;amp;list=PLyy8KUDC8P7X6YkegqrnEnymzMWCNB4bN&amp;amp;index=2|Getting started with Doom Emacs]]&lt;&#x2F;li&gt;
&lt;li&gt;[[https:&#x2F;&#x2F;github.com&#x2F;hlissner&#x2F;doom-emacs|Doom emacs]]&lt;&#x2F;li&gt;
&lt;li&gt;[[https:&#x2F;&#x2F;github.com&#x2F;syl20bnr&#x2F;spacemacs|Spacemacs]]&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
        <item>
            <title>Anime List</title>
            <pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://port19.xyz/anime/</link>
            <guid>https://port19.xyz/anime/</guid>
            <description>&lt;h2 id=&quot;favorites&quot;&gt;Favorites&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;movies&quot;&gt;Movies&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;A silent Voice&lt;&#x2F;li&gt;
&lt;li&gt;Perfect Blue&lt;&#x2F;li&gt;
&lt;li&gt;5 Centimeters per Second&lt;&#x2F;li&gt;
&lt;li&gt;Weathering With You&lt;&#x2F;li&gt;
&lt;li&gt;The Garden of Words&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;tv&quot;&gt;TV&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;FLCL Alternative&lt;&#x2F;li&gt;
&lt;li&gt;Serial Experiments Lain&lt;&#x2F;li&gt;
&lt;li&gt;Highschool of the Dead&lt;&#x2F;li&gt;
&lt;li&gt;Tsukigakirei&lt;&#x2F;li&gt;
&lt;li&gt;ODD Taxi&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;watching&quot;&gt;Watching&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Title&lt;&#x2F;th&gt;&lt;th&gt;Progress&lt;&#x2F;th&gt;&lt;th&gt;Format&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Cowboy Bebop&lt;&#x2F;td&gt;&lt;td&gt;8&#x2F;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;completed&quot;&gt;Completed&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Title&lt;&#x2F;th&gt;&lt;th&gt;Score&lt;&#x2F;th&gt;&lt;th&gt;Length&lt;&#x2F;th&gt;&lt;th&gt;Format&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;5 Centimeters per Second&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;A Silent Voice&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;FLCL Alternative&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Highschool of the Dead&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Into the Forest of Fireflies Light&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Is this a Zombie?&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;ODDTAXI&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Paranoia Agent&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Perfect Blue&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Garden of Words&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Night is Short, Walk on Girl&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Toradora!&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Tsukigakirei&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Say &amp;quot;I Love You&amp;quot;.&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Scum&#x27;s Wish&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Weathering With You&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;AJIN: Demi-Human&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Akira&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Asobi Asobase&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Bakemonogatari&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;15&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Death Note&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;37&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Death Parade&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Eroge! H mo Game mo Kaihatsu Zanmai&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Flavors of Youth&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;FLCL&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;FLCL Progressive&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Gantz&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ghost in the Shell&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Grave of the Fireflies&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Himouto! Umaru-chan&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Kiss x Sis&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;PUPARIA&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;ONA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Spirited Away&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Summer Ghost&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Tekkonkinkreet&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Girl Who Leapt Through Time&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Tokyo Godfathers&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Toradora!: Bento Battle&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Your Name.&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;BLEND-S&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Gabriel Dropout&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Children of the Sea&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Demon Slayer Infinity Train&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Divine Gate&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Elfen Lied&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;GANGSTA.&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Grimgar of Fantasy and Ash&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Gunslinger Girl&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Haibaane Renmei&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;HELLO WORLD&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;High School of the Dead: Drifters of the Dead&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Himouto! Umaru-chan R&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Himouto! Umaru-chanS&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;Special&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Is the Order a Rabbit?&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Last Exile&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Neon Genesis Evangelion&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;One-Punch Man&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Pet Girl of Sakurasou&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;24&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Tatami Galaxy&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Tsubasa RESERVoir CHRoNiCLE&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Wolf Children&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Attack on Titan&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Attack on Titan Season 2&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Demon Slayer&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Demon Slayer Entertainment District Arc&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;HELLSING&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;High School DxD&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ikkitousen: Dragon Destiny&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ikkitousen: Great Guardians&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ikkitousen: Xtreme Xecutor&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Aesthetica of a Rogue Hero&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Battle Vixens: Ikki Tousen&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;GOLDEN BOY&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;OVA&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;PSYCHO-PASS&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;22&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Sword Art Online&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;25&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;The Future Diary&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;dropped&quot;&gt;Dropped&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Title&lt;&#x2F;th&gt;&lt;th&gt;Score&lt;&#x2F;th&gt;&lt;th&gt;Progress&lt;&#x2F;th&gt;&lt;th&gt;Format&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Fullmetal Alchemist: Brotherhood&lt;&#x2F;td&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;?&#x2F;64&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Nichijou - My Ordinary Life&lt;&#x2F;td&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;17&#x2F;26&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Nisekoi&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;?&#x2F;20&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;One Piece&lt;&#x2F;td&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;30&#x2F;&amp;gt;1000&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Sonny Boy&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;8&#x2F;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Toradora! SOS! Hurray for Gourmands&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;2&#x2F;4&lt;&#x2F;td&gt;&lt;td&gt;Special&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Dorei-ku The Animation&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;6&#x2F;12&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Food Wars! Shokugeki no Soma&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;2&#x2F;24&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;planning&quot;&gt;Planning&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Title&lt;&#x2F;th&gt;&lt;th&gt;Format&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;A Place Further Than The Universe&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;After The Rain&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Anohana: The Flower We Saw That Day&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Cowboy Bebop - Knockin&#x27; On Heaven&#x27;s Door&lt;&#x2F;td&gt;&lt;td&gt;Movie&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Durarara!!&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Girls Last Tour&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;K-On!&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Non Non Biyori&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Ping Pong the Animation&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Welcome to the N.H.K.&lt;&#x2F;td&gt;&lt;td&gt;TV&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;sourcing&quot;&gt;Sourcing&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;https:&#x2F;&#x2F;nyaa.si&#x2F;&quot;&gt;nyaa&lt;&#x2F;a&gt;, sort by seeders and then pick a release that looks good&lt;&#x2F;li&gt;
&lt;li&gt;To watch torrented anime with a friend I recommend peer to peer file transfer via syncthing and then using syncplay for viewing&lt;&#x2F;li&gt;
&lt;li&gt;If you don&#x27;t have a vpn, try &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pystardust&#x2F;ani-cli&quot;&gt;ani-cli&lt;&#x2F;a&gt;, it has syncplay support&lt;&#x2F;li&gt;
&lt;li&gt;Avoid using a web browser to watch anime. It&#x27;s highly cringe&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
        </item>
    </channel>
</rss>
